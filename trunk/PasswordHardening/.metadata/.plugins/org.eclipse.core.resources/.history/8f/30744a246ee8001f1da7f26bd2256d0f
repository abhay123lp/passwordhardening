package com.buzzters.hotspotz.service;

import java.util.*;
import java.math.*;

import android.app.Service;
import android.app.NotificationManager;
import android.os.Binder;
import android.os.IBinder;
import android.widget.Toast;
import android.content.Intent;
import android.util.Log;
import com.google.android.maps.*;
import android.location.*;


public class Compute extends Service{

	
	private static final int START_STICKY = 0;
	private NotificationManager mnm;
	
	public class LocalBinder extends Binder{
		Compute getService(){
			return Compute.this;
			
		}
	}
	
	public void onCreate(){
		mnm=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);
		showNotification();
	}
	
	
    public int onStartCommand(Intent intent, int flags, int startId) {
        Log.i("LocalService", "Received start id " + startId + ": " + intent);
        return START_STICKY;
    }

    @Override
    public void onDestroy() {
        // Cancel the persistent notification.
        mnm.cancel(0);

        // Tell the user we stopped.
        Toast.makeText(this, "Service Stopped", Toast.LENGTH_SHORT).show();
    }
	
	
     @Override
     public IBinder onBind(Intent intent){
    	 return mBinder;
     }
     
     private final IBinder mBinder = new LocalBinder();

     
     
    	 
     
     public List <GeoPoint> computePlace(List <GeoPoint> friendLocations,List <GeoPoint> placeLocations){
    	 int l=1;
    	 int i=friendLocations.size();
    	 int k=placeLocations.size();
    	 float aggregate[]=new float[k];
    	 float mean[]=new float[k];
    	 float sum[]=new float[i];
    	 float distance[]=new float[i] ; 
    	 ListIterator <GeoPoint> itr1 = placeLocations.listIterator();
    	 while(itr1.hasNext()){
    		 int j=1;
    		 sum[1]=0;
    		 GeoPoint location1 = itr1.next();
    		 ListIterator <GeoPoint> itr2 = friendLocations.listIterator();
    		 while(itr2.hasNext()){
    			 GeoPoint location2 = itr2.next();
    			 Location.distanceBetween((double)location1.getLatitudeE6(),(double)location1.getLongitudeE6(),(double)location2.getLatitudeE6(),(double)location2.getLongitudeE6(),distance);
    		     sum[j]=sum[j] + distance[j];
    		     ++j;
    		 }
    		 aggregate[l]=sum[j];
    		 mean[l]=aggregate[l]/i;
    		 stddev[l]=standardDeviation(distance,mean,i);
    		 ++l;
    	 }
    	 
      }
     
     public double standardDeviation(float[] distance,float mean,int i){
    	 float sum=0;
    	 for(int j=1;j<=i;j++){
    		 sum=sum+(distance[j]-mean)*(distance[j]-mean);
    	 }
    	 double result=(double)(sqrt(sum));
    	 
     }
     
}
